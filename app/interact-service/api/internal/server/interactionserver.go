// Code generated by goctl. DO NOT EDIT.
// Source: interact.proto

package server

import (
	"context"

	"codexie.com/w-book-interact/api/internal/logic"
	"codexie.com/w-book-interact/api/internal/svc"
	"codexie.com/w-book-interact/api/pb/interact"
)

type InteractionServer struct {
	svcCtx *svc.ServiceContext
	interact.UnimplementedInteractionServer
}

func NewInteractionServer(svcCtx *svc.ServiceContext) *InteractionServer {
	return &InteractionServer{
		svcCtx: svcCtx,
	}
}

func (s *InteractionServer) QueryInteractionInfo(ctx context.Context, in *interact.QueryInteractionReq) (*interact.InteractionResult, error) {
	l := logic.NewQueryInteractionInfoLogic(ctx, s.svcCtx)
	return l.QueryInteractionInfo(in)
}

func (s *InteractionServer) QueryInteractionsInfo(ctx context.Context, in *interact.QueryInteractionsReq) (*interact.InteractionsInfo, error) {
	l := logic.NewQueryInteractionsInfoLogic(ctx, s.svcCtx)
	return l.QueryInteractionsInfo(in)
}

func (s *InteractionServer) IncreReadCnt(ctx context.Context, in *interact.AddReadCntReq) (*interact.CommonResult, error) {
	l := logic.NewIncreReadCntLogic(ctx, s.svcCtx)
	return l.IncreReadCnt(in)
}

func (s *InteractionServer) TopLike(ctx context.Context, in *interact.TopLikeReq) (*interact.TopLikeResp, error) {
	l := logic.NewTopLikeLogic(ctx, s.svcCtx)
	return l.TopLike(in)
}
